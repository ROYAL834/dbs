{"version":3,"file":"src_app_pages_home_home_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAA+C;AACN;AACI;AACU;AACV;AACS;AACmC;AAClD;AAE8C;AAClC;AACL;AACA;AAE9C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,gDAAQ;QACnB,IAAI,EAAE;YACJ,WAAW,EAAE,CAAC,WAAW,CAAC;SAC3B;QACD,WAAW,EAAE,CAAC,mGAAsB,CAAC;KACtC;CACF,CAAC;IAQW,cAAc,SAAd,cAAc;CAAG;AAAjB,cAAc;IAN1B,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,uDAAW,EAAE,yDAAY,EAAE,6DAAgB,EAAC,wDAAW,EAAE,iEAAe,EAAE,mEAAqB,CAAC,MAAM,CAAC,CAAC;QAClH,YAAY,EAAE,CAAC,gDAAQ,EAAE,0FAAmB,CAAE;QAC9C,SAAS,EAAE,CAAC,wDAAI,EAAE,wDAAI,CAAC;KAExB,CAAC;GACW,cAAc,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/B+C;AAC3B;AAEsB;AACH;AAEjB;AACjD,2DAA2D;AACW;AAIP;AACsB;AACvC;AACA;AAE9C,IAAI,IAA6C,CAAC;AAClD,IAAI,GAAS,CAAC;AACd,MAAM,GAAG,GAAG,6BAA6B,GAAC,IAAI,GAAC,mBAAmB,CAAC;AACnE,yCAAyC;AACzC,qBAAqB;IASR,QAAQ,SAAR,QAAQ;IAMnB,YAAoB,IAAU,EAAU,IAAU,EAAS,aAA4B,EAAS,SAAuB,EAAQ,UAAsB,EAAU,cAA8B,EAAU,YAA0B;QAA7M,SAAI,GAAJ,IAAI,CAAM;QAAU,SAAI,GAAJ,IAAI,CAAM;QAAS,kBAAa,GAAb,aAAa,CAAe;QAAS,cAAS,GAAT,SAAS,CAAc;QAAQ,eAAU,GAAV,UAAU,CAAY;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,iBAAY,GAAZ,YAAY,CAAc;QAF1N,aAAQ,GAAiB,IAAI,yDAAY,CAAC,EAAE,CAAC,CAAC;QAC9C,wBAAmB,GAAY,KAAK,CAAC;IACwL,CAAC;IAErO,QAAQ;QACN,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;YAC5C,IAAI,OAAO,KAAK,IAAI,EAAE;gBACpB,IAAI,CAAC,gBAAgB,EAAE,CAAC;aACzB;iBAAM;gBACL,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;aACxB;QACH,CAAC,CAAC,CAAC;IAGL,CAAC;IAED,eAAe;QACb,OAAO,IAAI,CAAC,cAAc,CAAC,eAAe,EAAE,CAAC;IAC/C,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;QAC3B,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAEO,gBAAgB;QACtB,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;IACtC,CAAC;IACD,mBAAmB;IACnB,oCAAoC;IACpC,qDAAqD;IACrD,4DAA4D;IAC5D,wEAAwE;IACxE,0BAA0B;IAC1B,iCAAiC;IACjC,sCAAsC;IACtC,6CAA6C;IAC7C,WAAW;IACX,SAAS;IACT,wBAAwB;IACxB,yCAAyC;IACzC,kCAAkC;IAClC,SAAS;IAET,6EAA6E;IAC7E,2BAA2B;IAC3B,2BAA2B;IAC3B,yBAAyB;IACzB,2BAA2B;IAC3B,qBAAqB;IACrB,4BAA4B;IAC5B,UAAU;IACV,IAAI;IAEJ,aAAa;IACb,oCAAoC;IACpC,qDAAqD;IACrD,4DAA4D;IAC5D,wEAAwE;IACxE,0BAA0B;IAC1B,iCAAiC;IACjC,sCAAsC;IACtC,6CAA6C;IAC7C,WAAW;IACX,SAAS;IACT,wBAAwB;IACxB,yCAAyC;IACzC,kCAAkC;IAClC,SAAS;IAET,8FAA8F;IAC9F,2BAA2B;IAC3B,2BAA2B;IAC3B,qBAAqB;IACrB,4BAA4B;IAC5B,UAAU;IACV,IAAI;IAIJ,mBAAmB;IAClB,0CAA0C;IAC1C,GAAG;IAEH,gCAAgC;IAChC,sDAAsD;IACtD,GAAG;IAEH,sCAAsC;IACrC,+EAA+E;IAChF,GAAG;IACN,uCAAuC;IACvC,wCAAwC;IACxC,yCAAyC;IACzC,IAAI;IAEJ,sDAAsD;IACtD,6CAA6C;IAC7C,+CAA+C;IAG/C,iEAAiE;IACjE,2BAA2B;IAC3B,6DAA6D;IAC7D,sCAAsC;IACtC,6CAA6C;IAC7C,cAAc;IACd,qCAAqC;IACrC,IAAI;IACJ,2BAA2B;IAC3B,yDAAyD;IACzD,yCAAyC;IACzC,oBAAoB;IACpB,4BAA4B;IAC5B,UAAU;IACV,IAAI;IAGJ,oFAAoF;IACpF,qDAAqD;IACrD,gBAAgB;IAChB,+BAA+B;IAC/B,wBAAwB;IACxB,sBAAsB;IACtB,+BAA+B;IAC/B,0CAA0C;IAG1C,QAAQ;IAEN,uDAAuD;IACvD,iCAAiC;IACjC,uBAAuB;IACvB,IAAI;IACJ,iCAAiC;IACjC,mDAAmD;IACnD,4BAA4B;IAC5B,QAAQ;IACR,IAAI;IAEJ,2BAA2B;IAC3B,mCAAmC;IACnC,IAAI;IAEJ,kDAAkD;IAClD,8EAA8E;IAC9E,oEAAoE;IACpE,IAAI;IACJ,OAAO;QACL,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;QACtC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAEnB,IAAI,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC9B,mFAAmF;QAEnF,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YACrB,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;QAErB,0BAA0B;QAC1B,mBAAmB;QACnB,8BAA8B;QAE9B,OAAO;QACP,kBAAkB;QAClB,uCAAuC;QACvC,4BAA4B;QAC5B,wCAAwC;QACxC,+DAA+D;QAC/D,yFAAyF;QAEzF,KAAK;QAIL,wBAAwB;QACxB,+BAA+B;QAC/B,oCAAoC;QACpC,wCAAwC;QACxC,SAAS;QACT,OAAO;QAEP,wBAAwB;QAExB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,gCAAgC,EAAC,QAAQ,CAAC;aAC5D,SAAS,CAAC,IAAI,CAAC,EAAE;YAChB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,2BAA2B;YAC3B,IAAI,GAAE,IAAI,CAAC,MAAM,CAAC;YAElB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;QAClB,CAAC,EAAE,KAAK,CAAC,EAAE;YACV,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,QAAQ;QAEN,mFAAmF;QAEnF,iCAAiC;QACjC,sDAAsD;QACtD,6DAA6D;QAC7D,4EAA4E;QAC5E,wBAAwB;QACxB,+BAA+B;QAC/B,yHAAyH;QACzH,2DAA2D;QAE3D,yCAAyC;QACzC,SAAS;QACT,OAAO;QAEP,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,kFAAkF,CAAC;QACrG,8BAA8B;QAC9B,yBAAyB;QACzB,kCAAkC;QAClC,gCAAgC;QAChC,kCAAkC;QAClC,2DAA2D;QAC3D,mGAAmG;QACnG,iCAAiC;QACjC,yBAAyB;QACzB,gEAAgE;QAChE,oDAAoD;QACpD,qaAAqa;QACra,iBAAiB;QACjB,wBAAwB;QACxB,MAAM;IAEV,CAAC;IAED,YAAY;QACV,IAAI,GAAG,GAAG,6BAA6B,GAAC,IAAI,GAAC,mBAAmB,CAAC;QACjE,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,YAAY,EAAE,aAAa,EAAE,CAAC,CAAC,IAAI,CAC7E,YAAY,CAAC,EAAE;YACb,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC;YAC1C,IAAI,CAAC,cAAc,GAAG,IAAI,IAAI,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC,CAAC;QACnF,CAAC,CACF,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;YACZ,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CAAC;IACJ,CAAC;IAEK,SAAS;;YACb,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI;gBAAE,OAAO;YACxC,IAAI,QAAQ,GAAG,0BAA0B,CAAC;YAC1C,MAAM,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YAChC,MAAM,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;QACnC,CAAC;KAAA;IAEK,UAAU,CAAC,QAAQ;;YACvB,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;gBACxF,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC,CAAC;QACJ,CAAC;KAAA;IAED,WAAW,CAAC,QAAQ;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,QAAQ,EAAE,IAAI,CAAC,cAAc,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;YAC9I,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;YAC1C,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;QAC1B,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;YACb,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;CAIF;;YAjSQ,wDAAI;YACJ,wDAAI;YAdJ,0DAAa;YAOb,2EAAY;YAFZ,6DAAU;YAHV,0EAAc;YACd,uEAAY;;;wBA2BlB,qDAAS,SAAC,0FAAmB;;AADnB,QAAQ;IALpB,yDAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,iEAA6B;;KAE9B,CAAC;GACW,QAAQ,CAiRpB;AAjRoB;;;;;;;;;;;;;;;;;;;AC9BrB;;;;;;;;;;;;;;;;;GAiBG;AACoD;AACX;AAW5C;;GAEG;IAIU,YAAY,SAAZ,YAAY;IACvB,gBAAe,CAAC;IAEhB;;OAEG;IACH,UAAU,CAAC,IAAY,EAAE,MAAM,GAAG,KAAK;QACrC,IAAI,IAAI,CAAC,MAAM,GAAG,EAAE,EAAE;YACpB,OAAO,IAAI,CAAC;SACb;QACD,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACtE,CAAC;IAED;;OAEG;IACH,QAAQ,CAAC,YAAoB;QAC3B,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IACrD,CAAC;IAED;;OAEG;IACH,QAAQ,CAAC,WAAmB,EAAE,IAAY;QACxC,IAAI,MAAM,CAAC,SAAS,IAAK,MAAM,CAAC,SAAiB,CAAC,gBAAgB,EAAE;YAClE,yBAAyB;YACzB,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;YAClC,MAAM,WAAW,GAAG,IAAI,KAAK,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;YACrD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC9C,WAAW,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;aAC/C;YACD,MAAM,SAAS,GAAG,IAAI,UAAU,CAAC,WAAW,CAAC,CAAC;YAC9C,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,SAAS,CAAC,EAAE;gBACjC,IAAI,EAAE,WAAW;aAClB,CAAC,CAAC;YACF,MAAM,CAAC,SAAiB,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;SAClD;aAAM;YACL,iBAAiB;YACjB,MAAM,OAAO,GAAG,QAAQ,WAAW,WAAW,IAAI,EAAE,CAAC;YACrD,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;YAC1B,GAAG,CAAC,QAAQ,CAAC,KAAK,CAChB,eAAe;gBACb,OAAO;gBACP,0HAA0H,CAC7H,CAAC;SACH;IACH,CAAC;IAED;;OAEG;IACH,QAAQ,CAAC,IAAU,EAAE,EAAY;QAC/B,MAAM,UAAU,GAAe,IAAI,UAAU,EAAE,CAAC;QAChD,UAAU,CAAC,MAAM,GAAG,UAAU,CAAM;YAClC,MAAM,UAAU,GAAW,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;YACzG,EAAE,CAAC,UAAU,CAAC,CAAC;QACjB,CAAC,CAAC;QACF,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAED;;OAEG;IACH,eAAe,CAAC,MAAW,EAAE,UAAsB,EAAE,KAAa,EAAE,gBAAwB,EAAE,OAAe;QAC3G,IAAI,MAAM,IAAI,KAAK,IAAI,gBAAgB,EAAE;YACvC,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE;gBACvD,MAAM,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;aACtB;YACD,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,gBAAgB,CAAC,EAAE;gBAClE,MAAM,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC;aACjC;YACD,IAAI,UAAU,IAAI,OAAO,IAAI,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,GAAG,GAAG,OAAO,CAAC,EAAE;gBAClF,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,GAAG,GAAG,OAAO,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC;aACpE;SACF;IACH,CAAC;IAED;;;;;;;;;OASG;IACH,WAAW,CAAC,KAAK,EAAE,MAAM,EAAE,KAAa,EAAE,OAAgB;QACxD,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;gBACxE,MAAM,IAAI,GAAS,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACzC,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;oBAC9C,MAAM,CAAC,wDAAwD,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;iBAC7E;qBAAM;oBACL,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,UAAU,CAAC,EAAE;wBAC/B,MAAM,CAAC,KAAK,CAAC,GAAG,UAAU,CAAC;wBAC3B,MAAM,CAAC,GAAG,KAAK,aAAa,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;wBAC1C,OAAO,CAAC,MAAM,CAAC,CAAC;oBAClB,CAAC,CAAC,CAAC;iBACJ;aACF;iBAAM;gBACL,MAAM,CAAC,iFAAiF,KAAK,EAAE,CAAC,CAAC;aAClG;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;;;;;;;OAUG;IACH,cAAc,CAAC,KAAY,EAAE,QAAmB,EAAE,KAAa,EAAE,OAAgB;QAC/E,OAAO,IAAI,4CAAU,CAAC,CAAC,QAAwB,EAAE,EAAE;YACjD,MAAM,WAAW,GAAqB,KAAK,CAAC,MAA0B,CAAC;YACvE,IAAI,WAAW,CAAC,KAAK,IAAI,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;gBAC7C,MAAM,IAAI,GAAS,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACxC,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;oBAC9C,MAAM,KAAK,GAAqB;wBAC9B,OAAO,EAAE,yDAAyD,IAAI,CAAC,IAAI,GAAG;wBAC9E,GAAG,EAAE,WAAW;wBAChB,MAAM,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,IAAI,EAAE;qBAChC,CAAC;oBACF,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;iBACvB;qBAAM;oBACL,MAAM,gBAAgB,GAAW,KAAK,GAAG,aAAa,CAAC;oBACvD,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,UAAkB,EAAE,EAAE;wBACzC,QAAQ,CAAC,UAAU,CAAC;4BAClB,CAAC,KAAK,CAAC,EAAE,UAAU;4BACnB,CAAC,gBAAgB,CAAC,EAAE,IAAI,CAAC,IAAI;yBAC9B,CAAC,CAAC;wBACH,QAAQ,CAAC,IAAI,EAAE,CAAC;wBAChB,QAAQ,CAAC,QAAQ,EAAE,CAAC;oBACtB,CAAC,CAAC,CAAC;iBACJ;aACF;iBAAM;gBACL,MAAM,KAAK,GAAqB;oBAC9B,OAAO,EAAE,wBAAwB;oBACjC,GAAG,EAAE,mBAAmB;oBACxB,MAAM,EAAE,EAAE,KAAK,EAAE;iBAClB,CAAC;gBACF,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;aACvB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,YAAY,CAAC,WAAmB,EAAE,IAAY,EAAE,QAAgB;QAC9D,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAClC,MAAM,WAAW,GAAG,IAAI,KAAK,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QACrD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC9C,WAAW,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;SAC/C;QACD,MAAM,SAAS,GAAG,IAAI,UAAU,CAAC,WAAW,CAAC,CAAC;QAC9C,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,SAAS,CAAC,EAAE;YACjC,IAAI,EAAE,WAAW;SAClB,CAAC,CAAC;QACH,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QAC7C,QAAQ,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QACjD,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC7B,QAAQ,CAAC,MAAM,GAAG,QAAQ,CAAC;QAC3B,QAAQ,CAAC,KAAK,EAAE,CAAC;IACnB,CAAC;IAEO,QAAQ,CAAC,MAAc,EAAE,GAAW;QAC1C,OAAO,GAAG,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;IAC1D,CAAC;IAEO,WAAW,CAAC,KAAa;QAC/B,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;YAC9B,OAAO,CAAC,CAAC;SACV;QACD,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE;YAC7B,OAAO,CAAC,CAAC;SACV;QACD,OAAO,CAAC,CAAC;IACX,CAAC;IAEO,IAAI,CAAC,KAAa;QACxB,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IAC1D,CAAC;IAEO,aAAa,CAAC,IAAY;QAChC,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,uBAAuB,EAAE,GAAG,CAAC,GAAG,QAAQ,CAAC;IAC1E,CAAC;CACF;;AAhMY,YAAY;IAHxB,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,YAAY,CAgMxB;AAhMwB;;;;;;;;;;;;;;;;;;ACpCS;AACS;AACmF;AACtF;AACxC;AACA,IAAI,gDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qEAAiB;AACjC,uBAAuB,8DAAU;AACjC;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,qEAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,qEAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,qEAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,eAAe;AAC7E,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,qEAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,eAAe;AAC7E,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,qEAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,eAAe;AAC7E,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,qEAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,qEAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,eAAe;AAC7E,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,qEAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,qEAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,qEAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,eAAe;AACzE,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,kCAAkC;AAClC;AACA,gBAAgB,qEAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,WAAW;AAC1B,eAAe,6BAA6B;AAC5C,eAAe,eAAe;AAC9B,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,gCAAgC,YAAY;AAC5C;AACA;AACA;AACA;AACA,gBAAgB,qEAAiB;AACjC,+DAA+D,eAAe;AAC9E;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,qEAAiB;AACjC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,qEAAiB;AACjC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,qEAAiB;AACjC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,qEAAiB;AACjC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,qEAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,eAAe;AACzE,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,qEAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,eAAe;AACzE,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qEAAiB;AACjC,uBAAuB,8DAAU;AACjC;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,qEAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,qEAAiB;AACjC;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,qEAAiB;AACjC;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,eAAe;AACxE,SAAS;AACT;AACA;AACA,mBAAmB,8DAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,6CAA6C;AAC9E;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,gCAAgC;AAC1D,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,gCAAgC;AAC1D,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,8DAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,2BAA2B,OAAO,sEAAkB,iCAAiC;AACrF,gCAAgC,sEAAkB,wCAAwC;AAC1F;AACA;AACA,KAAK;AACL;AACA,2BAA2B,OAAO,sEAAkB,wCAAwC;AAC5F,gCAAgC,sEAAkB,+CAA+C;AACjG;AACA;AACA,KAAK;AACL;AACA,2BAA2B,OAAO,sEAAkB,0BAA0B;AAC9E,gCAAgC,sEAAkB,iCAAiC;AACnF;AACA;AACA,KAAK;AACL;AACA,2BAA2B,OAAO,sEAAkB,2BAA2B;AAC/E,gCAAgC,sEAAkB,kCAAkC;AACpF;AACA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","sources":["./src/app/pages/home/home.module.ts","./src/app/pages/home/home.page.ts","./src/app/services/utils/data-util.service.ts","./node_modules/@ionic-native/file/__ivy_ngcc__/ngx/index.js","./node_modules/@ionic-native/http/__ivy_ngcc__/ngx/index.js"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { UserRouteAccessService } from 'src/app/services/auth/user-route-access.service';\nimport { HomePage } from './home.page';\nimport { FileSelectDirective } from 'ng2-file-upload';\nimport { MultiFileUploadPage } from '../../multi-file-upload/multi-file-upload.page';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { File } from '@ionic-native/file/ngx';\nimport { HTTP } from '@ionic-native/http/ngx';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage,\n    data: {\n      authorities: ['ROLE_USER'],\n    },\n    canActivate: [UserRouteAccessService],\n  },\n];\n\n@NgModule({\n  imports: [IonicModule, CommonModule, FileUploadModule,FormsModule, TranslateModule, RouterModule.forChild(routes)],\n  declarations: [HomePage, MultiFileUploadPage ],\n  providers: [File, HTTP]\n  \n})\nexport class HomePageModule {}\n","import { Component, OnInit, EventEmitter,ViewChild } from '@angular/core';\nimport { NavController } from '@ionic/angular';\nimport { Account } from 'src/model/account.model';\nimport { AccountService } from '../../services/auth/account.service';\nimport { LoginService } from '../../services/login/login.service';\nimport { HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { HttpClient} from '@angular/common/http'; \n//import { FileChooser } from '@ionic-native/file-chooser';\nimport { JhiDataUtils } from '../../services/utils/data-util.service';\nimport {map, zipAll} from 'rxjs/operators';\nimport {Observable} from 'rxjs';\nimport { ɵNgSelectMultipleOption } from '@angular/forms';\nimport { FileUploader, FileLikeObject } from 'ng2-file-upload';\nimport { MultiFileUploadPage } from '../../multi-file-upload/multi-file-upload.page';\nimport { File } from '@ionic-native/file/ngx';\nimport { HTTP } from '@ionic-native/http/ngx';\n\nlet uuid:  '1a216b35-b573-4fa8-9870-e076155a8444';\nlet zip : any;\nconst URL = 'http://localhost:3000/task/'+uuid+'/download/all.zip';\n// var el= document.getElementById('a'); \n// // el.href += uuid\n\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage implements OnInit {\n  @ViewChild(MultiFileUploadPage) fileField: MultiFileUploadPage;\n  account: Account;\n  private downloadedFile;\n  public uploader: FileUploader = new FileUploader({});\n  public hasBaseDropZoneOver: boolean = false;\n  constructor(private file: File, private http: HTTP, public navController: NavController,private dataUtils: JhiDataUtils,public httpClient: HttpClient, private accountService: AccountService, private loginService: LoginService) {}\n\n  ngOnInit() {\n    this.accountService.identity().then(account => {\n      if (account === null) {\n        this.goBackToHomePage();\n      } else {\n        this.account = account;\n      }\n    });\n   \n\n  }\n\n  isAuthenticated() {\n    return this.accountService.isAuthenticated();\n  }\n\n  logout() {\n    this.loginService.logout();\n    this.goBackToHomePage();\n  }\n\n  private goBackToHomePage(): void {\n    this.navController.navigateBack('');\n  }\n  // selectimages() {\n  //   // var headers = new Headers();\n  //   // headers.append(\"Accept\", 'application/json');\n  //   // headers.append('Content-Type', 'application/json' );\n  //   // const requestOptions = new RequestOptions({ headers: headers });\n  //   const httpOptions = {\n  //     headers: new HttpHeaders({\n  //       \"Accept\": 'application/json',\n  //       'Content-Type':  'application/json',\n  //       })\n  //     };\n  //   // let postData = {\n  //   //         \"title\": \"axalyn-server\",\n  //   //         \"author\": \"axalyn\"\n  //   // }\n\n  //   this.httpClient.post(\"http://localhost:3000/task/new/init\", httpOptions)\n  //     .subscribe(data => {\n  //       console.log(data);\n  //       uuid.push(data);\n  //       console.log(uuid);\n  //      }, error => {\n  //       console.log(error);\n  //     });\n  // }\n\n  // upload() {\n  //   // var headers = new Headers();\n  //   // headers.append(\"Accept\", 'application/json');\n  //   // headers.append('Content-Type', 'application/json' );\n  //   // const requestOptions = new RequestOptions({ headers: headers });\n  //   const httpOptions = {\n  //     headers: new HttpHeaders({\n  //       \"Accept\": 'application/json',\n  //       'Content-Type':  'application/json',\n  //       })\n  //     };\n  //   // let postData = {\n  //   //         \"title\": \"axalyn-server\",\n  //   //         \"author\": \"axalyn\"\n  //   // }\n\n  //   this.httpClient.get(\"http://localhost:3000/task/`${uuid}`/download/all.zip\", httpOptions)\n  //     .subscribe(data => {\n  //       console.log(data);\n  //      }, error => {\n  //       console.log(error);\n  //     });\n  // }\n\n  \n  \n  //byteSize(field) {\n   //  return this.dataUtils.byteSize(field);\n   //}\n\n   //openFile(contentType, field) {\n   // return this.dataUtils.openFile(contentType, field);\n   //}\n\n   //setFileData(event, field, isImage) {\n    // this.dataUtils.loadFileToForm(event, this.form, field, isImage).subscribe();\n   //}\n//    fileToUpload: File | null = null;\n//    handleFileInput(files: FileList) {\n//     this.fileToUpload = files.item(0);\n// }\n\n// postFile(fileToUpload: File): Observable<boolean> {\n//   const endpoint = 'your-destination-url';\n//   const formData: FormData = new FormData();\n  \n  \n//   formData.append('fileKey', fileToUpload, fileToUpload.name);\n//   return this.httpClient\n//     .post(endpoint, formData, { headers: new HttpHeaders({\n//       \"Accept\": 'application/json',\n//       'Content-Type':  'application/json',\n//       }) })\n//       .map(() => { return true; })\n// }\n// uploadFileToActivity() {\n//   this.postFile(this.fileToUpload).subscribe(data => {\n//     // do something, if upload success\n//     }, error => {\n//       console.log(error);\n//     });\n// }\n\n\n// public uploader: FileUploader = new FileUploader({url: URL, itemAlias: 'photo'});\n// public uploader: FileUploader = new FileUploader({\n//     url: URL,\n//     disableMultipart: false,\n//     autoUpload: true,\n//     method: 'post',\n//     itemAlias: 'attachment',\n//     allowedFileType: ['image', 'pdf',],\n        \n    \n//   });\n\n  // public onFileSelected(event: EventEmitter<File[]>) {\n  //   const file: File = event[0];\n  //   console.log(file);\n  // }\n  // getFiles(): FileLikeObject[] {\n  //   return this.uploader.queue.map((fileItem) => {\n  //     return fileItem.file;\n  //   });\n  // }\n\n  // fileOverBase(ev): void {\n  //   this.hasBaseDropZoneOver = ev;\n  // }\n\n  // reorderFiles(reorderEvent: CustomEvent): void {\n  //   let element = this.uploader.queue.splice(reorderEvent.detail.from, 1)[0];\n  //   this.uploader.queue.splice(reorderEvent.detail.to, 0, element);\n  // }\n  upload2() {\n    let files = this.fileField.getFiles();\n    console.log(files);\n\n    let formData = new FormData();\n    // formData.append('somekey', 'some value'); // Add any other data you want to send\n\n    files.forEach((file) => {\n      formData.append('images', file.rawFile);\n    });\n    console.log(formData)\n\n    // POST formData to Server\n    // let postData = {\n    //         \"images\": formData,\n            \n    // // }\n    // let headers = {\n    //   'enctype': 'multipart/form-data;',\n    //   'Accept': 'plain/text',\n    //   'Access-Control-Allow-Origin': '*',\n    //   'Access-Control-Allow-Methods': 'POST, GET, OPTIONS, PUT',\n    //   'Access-Control-Allow-Headers': 'Authorization, Origin, Content-Type, X-CSRF-Token',\n      \n    // };\n    \n    \n  \n    // const httpOptions = {\n    //   headers: new HttpHeaders({\n    //     \"Accept\": 'application/json',\n    //     'Content-Type':'application/json'\n    //     })\n    //   };\n    \n    // console.log(formData)\n\n    this.httpClient.post(\"http://localhost:3000/task/new\",formData)\n      .subscribe(data => {\n        console.log(data);\n        // console.log(data[UUID]);\n        uuid= data['uuid']\n        \n        console.log(uuid)\n       }, error => {\n        console.log(error);\n      });\n  }\n\n  download() {\n    \n    // http://localhost:3000/task/63291821-3846-4c1b-adb5-6e0fcf8a6381/download/all.zip\n    \n    //   var headers = new Headers();\n    //       headers.append(\"Accept\", 'application/json');\n    //       headers.append('Content-Type', 'application/json' );\n    //       // const requestOptions = new RequestOptions({ headers: headers });\n    // const httpOptions = {\n    //   headers: new HttpHeaders({\n    //     \"Accept\": 'text/html,application/zip,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8',\n    //     'Content-Type':  'application/json,application/zip',\n        \n    //     'Accept-Language':'en-US,en;q=0.5'\n    //     })\n    //   };\n\n    this.httpClient.get(\"http://localhost:3000/task/1a216b35-b573-4fa8-9870-e076155a8444/download/all.zip\")\n      // .subscribe((data: any) => {\n      //   console.log(data);  \n      //   // let dataType = data.type; \n      //   //     let binaryData = [];\n      //   //     binaryData.push(data);\n      //   //     let downloadLink = document.createElement('a');\n      //   //     downloadLink.href = window.URL.createObjectURL(new Blob(binaryData, {type: dataType}));\n      //   //     let filename = 'all';\n      //   //     if (filename)\n      //   //         downloadLink.setAttribute('download', filename);\n      //   //     document.body.appendChild(downloadLink);\n      //   //     downloadLink.click();                                                                                                                                                                                                                                                                                                                                                                                                    \n      //  }, error => {\n      //   console.log(error);\n      // });\n     \n  }\n\n  downloadFile() {\n    var url = 'http://localhost:3000/task/'+uuid+'/download/all.zip';\n    this.http.sendRequest(url, { method: \"get\", responseType: \"arraybuffer\" }).then(\n      httpResponse => {\n        console.log(\"File dowloaded successfully\")\n        this.downloadedFile = new Blob([httpResponse.data], { type: 'application/zip' });\n      }\n    ).catch(err => {\n      console.error(err);\n    })\n  }\n\n  async writeFile() {\n    if (this.downloadedFile == null) return;\n    var filename = 'myDownloadedPdfFile3.zip';\n    await this.createFile(filename);\n    await this.writeToFile(filename);\n  }\n\n  async createFile(filename) {\n    return this.file.createFile(this.file.externalRootDirectory, filename, false).catch(err => {\n      console.error(err);\n    })\n  }\n\n  writeToFile(filename) {\n    return this.file.writeFile(this.file.externalRootDirectory, filename, this.downloadedFile, { replace: true, append: false }).then(createdFile => {\n      console.log('File written successfully.');\n      console.log(createdFile)\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n  \n\n  \n}\n\n","/*\n Copyright 2016-Present the original author or authors from the JHipster project.\n\n This file is part of the JHipster project, see https://www.jhipster.tech/\n for more information.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n */\nimport { ElementRef, Injectable } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\nimport { FormGroup } from '@angular/forms';\n\nexport type JhiFileLoadErrorType = 'not.image' | 'could.not.extract';\n\nexport interface JhiFileLoadError {\n  message: string;\n  key: JhiFileLoadErrorType;\n  params?: any;\n}\n\n/**\n * An utility service for data.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JhiDataUtils {\n  constructor() {}\n\n  /**\n   * Method to abbreviate the text given\n   */\n  abbreviate(text: string, append = '...'): string {\n    if (text.length < 30) {\n      return text;\n    }\n    return text ? text.substring(0, 15) + append + text.slice(-10) : '';\n  }\n\n  /**\n   * Method to find the byte size of the string provides\n   */\n  byteSize(base64String: string): string {\n    return this.formatAsBytes(this.size(base64String));\n  }\n\n  /**\n   * Method to open file\n   */\n  openFile(contentType: string, data: string): void {\n    if (window.navigator && (window.navigator as any).msSaveOrOpenBlob) {\n      // To support IE and Edge\n      const byteCharacters = atob(data);\n      const byteNumbers = new Array(byteCharacters.length);\n      for (let i = 0; i < byteCharacters.length; i++) {\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\n      }\n      const byteArray = new Uint8Array(byteNumbers);\n      const blob = new Blob([byteArray], {\n        type: contentType,\n      });\n      (window.navigator as any).msSaveOrOpenBlob(blob);\n    } else {\n      // Other browsers\n      const fileURL = `data:${contentType};base64,${data}`;\n      const win = window.open();\n      win.document.write(\n        '<iframe src=\"' +\n          fileURL +\n          '\" frameborder=\"0\" style=\"border:0; top:0; left:0; bottom:0; right:0; width:100%; height:100%;\" allowfullscreen></iframe>'\n      );\n    }\n  }\n\n  /**\n   * Method to convert the file to base64\n   */\n  toBase64(file: File, cb: Function): void {\n    const fileReader: FileReader = new FileReader();\n    fileReader.onload = function (e: any) {\n      const base64Data: string = e.target.result.substr(e.target.result.indexOf('base64,') + 'base64,'.length);\n      cb(base64Data);\n    };\n    fileReader.readAsDataURL(file);\n  }\n\n  /**\n   * Method to clear the input\n   */\n  clearInputImage(entity: any, elementRef: ElementRef, field: string, fieldContentType: string, idInput: string): void {\n    if (entity && field && fieldContentType) {\n      if (Object.prototype.hasOwnProperty.call(entity, field)) {\n        entity[field] = null;\n      }\n      if (Object.prototype.hasOwnProperty.call(entity, fieldContentType)) {\n        entity[fieldContentType] = null;\n      }\n      if (elementRef && idInput && elementRef.nativeElement.querySelector('#' + idInput)) {\n        elementRef.nativeElement.querySelector('#' + idInput).value = null;\n      }\n    }\n  }\n\n  /**\n   * Sets the base 64 data & file type of the 1st file on the event (event.target.files[0]) in the passed entity object\n   * and returns a promise.\n   *\n   * @param event the object containing the file (at event.target.files[0])\n   * @param entity the object to set the file's 'base 64 data' and 'file type' on\n   * @param field the field name to set the file's 'base 64 data' on\n   * @param isImage boolean representing if the file represented by the event is an image\n   * @returns a promise that resolves to the modified entity if operation is successful, otherwise rejects with an error message\n   */\n  setFileData(event, entity, field: string, isImage: boolean): Promise<any> {\n    return new Promise((resolve, reject) => {\n      if (event && event.target && event.target.files && event.target.files[0]) {\n        const file: File = event.target.files[0];\n        if (isImage && !file.type.startsWith('image/')) {\n          reject(`File was expected to be an image but was found to be ${file.type}`);\n        } else {\n          this.toBase64(file, base64Data => {\n            entity[field] = base64Data;\n            entity[`${field}ContentType`] = file.type;\n            resolve(entity);\n          });\n        }\n      } else {\n        reject(`Base64 data was not set as file could not be extracted from passed parameter: ${event}`);\n      }\n    });\n  }\n\n  /**\n   * Sets the base 64 data & file type of the 1st file on the event (event.target.files[0]) in the passed entity object\n   * and returns an observable.\n   *\n   * @param event the object containing the file (at event.target.files[0])\n   * @param editForm the form group where the input field is located\n   * @param field the field name to set the file's 'base 64 data' on\n   * @param isImage boolean representing if the file represented by the event is an image\n   * @returns an observable that loads file to form field and completes if sussessful\n   *          or returns error as JhiFileLoadError on failure\n   */\n  loadFileToForm(event: Event, editForm: FormGroup, field: string, isImage: boolean): Observable<void> {\n    return new Observable((observer: Observer<void>) => {\n      const eventTarget: HTMLInputElement = event.target as HTMLInputElement;\n      if (eventTarget.files && eventTarget.files[0]) {\n        const file: File = eventTarget.files[0];\n        if (isImage && !file.type.startsWith('image/')) {\n          const error: JhiFileLoadError = {\n            message: `File was expected to be an image but was found to be '${file.type}'`,\n            key: 'not.image',\n            params: { fileType: file.type },\n          };\n          observer.error(error);\n        } else {\n          const fieldContentType: string = field + 'ContentType';\n          this.toBase64(file, (base64Data: string) => {\n            editForm.patchValue({\n              [field]: base64Data,\n              [fieldContentType]: file.type,\n            });\n            observer.next();\n            observer.complete();\n          });\n        }\n      } else {\n        const error: JhiFileLoadError = {\n          message: 'Could not extract file',\n          key: 'could.not.extract',\n          params: { event },\n        };\n        observer.error(error);\n      }\n    });\n  }\n\n  /**\n   * Method to download file\n   */\n  downloadFile(contentType: string, data: string, fileName: string): void {\n    const byteCharacters = atob(data);\n    const byteNumbers = new Array(byteCharacters.length);\n    for (let i = 0; i < byteCharacters.length; i++) {\n      byteNumbers[i] = byteCharacters.charCodeAt(i);\n    }\n    const byteArray = new Uint8Array(byteNumbers);\n    const blob = new Blob([byteArray], {\n      type: contentType,\n    });\n    const tempLink = document.createElement('a');\n    tempLink.href = window.URL.createObjectURL(blob);\n    tempLink.download = fileName;\n    tempLink.target = '_blank';\n    tempLink.click();\n  }\n\n  private endsWith(suffix: string, str: string): boolean {\n    return str.includes(suffix, str.length - suffix.length);\n  }\n\n  private paddingSize(value: string): number {\n    if (this.endsWith('==', value)) {\n      return 2;\n    }\n    if (this.endsWith('=', value)) {\n      return 1;\n    }\n    return 0;\n  }\n\n  private size(value: string): number {\n    return (value.length / 4) * 3 - this.paddingSize(value);\n  }\n\n  private formatAsBytes(size: number): string {\n    return size.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ') + ' bytes';\n  }\n}\n","import { __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { IonicNativePlugin, checkAvailability, cordovaPropertyGet, cordovaPropertySet, getPromise } from '@ionic-native/core';\nimport * as ɵngcc0 from '@angular/core';\nvar File = /** @class */ (function (_super) {\n    __extends(File, _super);\n    function File() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.cordovaFileError = {\n            1: 'NOT_FOUND_ERR',\n            2: 'SECURITY_ERR',\n            3: 'ABORT_ERR',\n            4: 'NOT_READABLE_ERR',\n            5: 'ENCODING_ERR',\n            6: 'NO_MODIFICATION_ALLOWED_ERR',\n            7: 'INVALID_STATE_ERR',\n            8: 'SYNTAX_ERR',\n            9: 'INVALID_MODIFICATION_ERR',\n            10: 'QUOTA_EXCEEDED_ERR',\n            11: 'TYPE_MISMATCH_ERR',\n            12: 'PATH_EXISTS_ERR',\n            13: 'WRONG_ENTRY_TYPE',\n            14: 'DIR_READ_ERR',\n        };\n        return _this;\n    }\n    File.prototype.getFreeDiskSpace = function () {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                return getPromise(function (resolve, reject) {\n                    cordova.exec(resolve, reject, 'File', 'getFreeDiskSpace', []);\n                });\n            }\n        })();\n    };\n    File.prototype.checkDir = function (path, dir) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                if (/^\\//.test(dir)) {\n                    var err = new FileError(5);\n                    err.message = 'directory cannot start with /';\n                    return Promise.reject(err);\n                }\n                var fullPath = path + dir;\n                return _this.resolveDirectoryUrl(fullPath).then(function () {\n                    return true;\n                });\n            }\n        })();\n    };\n    File.prototype.createDir = function (path, dirName, replace) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                if (/^\\//.test(dirName)) {\n                    var err = new FileError(5);\n                    err.message = 'directory cannot start with /';\n                    return Promise.reject(err);\n                }\n                var options = {\n                    create: true,\n                };\n                if (!replace) {\n                    options.exclusive = true;\n                }\n                return _this.resolveDirectoryUrl(path).then(function (fse) {\n                    return _this.getDirectory(fse, dirName, options);\n                });\n            }\n        })();\n    };\n    File.prototype.removeDir = function (path, dirName) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                if (/^\\//.test(dirName)) {\n                    var err = new FileError(5);\n                    err.message = 'directory cannot start with /';\n                    return Promise.reject(err);\n                }\n                return _this.resolveDirectoryUrl(path)\n                    .then(function (fse) {\n                    return _this.getDirectory(fse, dirName, { create: false });\n                })\n                    .then(function (de) {\n                    return _this.remove(de);\n                });\n            }\n        })();\n    };\n    File.prototype.moveDir = function (path, dirName, newPath, newDirName) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                newDirName = newDirName || dirName;\n                if (/^\\//.test(newDirName)) {\n                    var err = new FileError(5);\n                    err.message = 'directory cannot start with /';\n                    return Promise.reject(err);\n                }\n                return _this.resolveDirectoryUrl(path)\n                    .then(function (fse) {\n                    return _this.getDirectory(fse, dirName, { create: false });\n                })\n                    .then(function (srcde) {\n                    return _this.resolveDirectoryUrl(newPath).then(function (destenation) {\n                        return _this.move(srcde, destenation, newDirName);\n                    });\n                });\n            }\n        })();\n    };\n    File.prototype.copyDir = function (path, dirName, newPath, newDirName) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                if (/^\\//.test(newDirName)) {\n                    var err = new FileError(5);\n                    err.message = 'directory cannot start with /';\n                    return Promise.reject(err);\n                }\n                return _this.resolveDirectoryUrl(path)\n                    .then(function (fse) {\n                    return _this.getDirectory(fse, dirName, { create: false });\n                })\n                    .then(function (srcde) {\n                    return _this.resolveDirectoryUrl(newPath).then(function (deste) {\n                        return _this.copy(srcde, deste, newDirName);\n                    });\n                });\n            }\n        })();\n    };\n    File.prototype.listDir = function (path, dirName) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                if (/^\\//.test(dirName)) {\n                    var err = new FileError(5);\n                    err.message = 'directory cannot start with /';\n                    return Promise.reject(err);\n                }\n                return _this.resolveDirectoryUrl(path)\n                    .then(function (fse) {\n                    return _this.getDirectory(fse, dirName, {\n                        create: false,\n                        exclusive: false,\n                    });\n                })\n                    .then(function (de) {\n                    var reader = de.createReader();\n                    return _this.readEntries(reader);\n                });\n            }\n        })();\n    };\n    File.prototype.removeRecursively = function (path, dirName) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                if (/^\\//.test(dirName)) {\n                    var err = new FileError(5);\n                    err.message = 'directory cannot start with /';\n                    return Promise.reject(err);\n                }\n                return _this.resolveDirectoryUrl(path)\n                    .then(function (fse) {\n                    return _this.getDirectory(fse, dirName, { create: false });\n                })\n                    .then(function (de) {\n                    return _this.rimraf(de);\n                });\n            }\n        })();\n    };\n    File.prototype.checkFile = function (path, file) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                if (/^\\//.test(file)) {\n                    var err = new FileError(5);\n                    err.message = 'file cannot start with /';\n                    return Promise.reject(err);\n                }\n                return _this.resolveLocalFilesystemUrl(path + file).then(function (fse) {\n                    if (fse.isFile) {\n                        return true;\n                    }\n                    else {\n                        var err = new FileError(13);\n                        err.message = 'input is not a file';\n                        return Promise.reject(err);\n                    }\n                });\n            }\n        })();\n    };\n    File.prototype.createFile = function (path, fileName, replace) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                if (/^\\//.test(fileName)) {\n                    var err = new FileError(5);\n                    err.message = 'file-name cannot start with /';\n                    return Promise.reject(err);\n                }\n                var options = {\n                    create: true,\n                };\n                if (!replace) {\n                    options.exclusive = true;\n                }\n                return _this.resolveDirectoryUrl(path).then(function (fse) {\n                    return _this.getFile(fse, fileName, options);\n                });\n            }\n        })();\n    };\n    File.prototype.removeFile = function (path, fileName) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                if (/^\\//.test(fileName)) {\n                    var err = new FileError(5);\n                    err.message = 'file-name cannot start with /';\n                    return Promise.reject(err);\n                }\n                return _this.resolveDirectoryUrl(path)\n                    .then(function (fse) {\n                    return _this.getFile(fse, fileName, { create: false });\n                })\n                    .then(function (fe) {\n                    return _this.remove(fe);\n                });\n            }\n        })();\n    };\n    File.prototype.writeFile = function (path, fileName, text, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                if (/^\\//.test(fileName)) {\n                    var err = new FileError(5);\n                    err.message = 'file-name cannot start with /';\n                    return Promise.reject(err);\n                }\n                var getFileOpts = {\n                    create: !options.append,\n                    exclusive: !options.replace,\n                };\n                return _this.resolveDirectoryUrl(path)\n                    .then(function (directoryEntry) {\n                    return _this.getFile(directoryEntry, fileName, getFileOpts);\n                })\n                    .then(function (fileEntry) {\n                    return _this.writeFileEntry(fileEntry, text, options);\n                });\n            }\n        })();\n    };\n    /**\n     * Write content to FileEntry.\n     * @hidden\n     * Write to an existing file.\n     * @param {FileEntry} fe file entry object\n     * @param {string | Blob | ArrayBuffer} text text content or blob to write\n     * @param {IWriteOptions} options replace file if set to true. See WriteOptions for more information.\n     * @returns {Promise<FileEntry>}  Returns a Promise that resolves to updated file entry or rejects with an error.\n     */\n    File.prototype.writeFileEntry = function (fe, text, options) {\n        var _this = this;\n        return this.createWriter(fe)\n            .then(function (writer) {\n            if (options.append) {\n                writer.seek(writer.length);\n            }\n            if (options.truncate) {\n                writer.truncate(options.truncate);\n            }\n            return _this.write(writer, text);\n        })\n            .then(function () { return fe; });\n    };\n    File.prototype.writeExistingFile = function (path, fileName, text) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                return _this.writeFile(path, fileName, text, { replace: true });\n            }\n        })();\n    };\n    File.prototype.readAsText = function (path, file) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                return _this.readFile(path, file, 'Text');\n            }\n        })();\n    };\n    File.prototype.readAsDataURL = function (path, file) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                return _this.readFile(path, file, 'DataURL');\n            }\n        })();\n    };\n    File.prototype.readAsBinaryString = function (path, file) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                return _this.readFile(path, file, 'BinaryString');\n            }\n        })();\n    };\n    File.prototype.readAsArrayBuffer = function (path, file) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                return _this.readFile(path, file, 'ArrayBuffer');\n            }\n        })();\n    };\n    File.prototype.moveFile = function (path, fileName, newPath, newFileName) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                newFileName = newFileName || fileName;\n                if (/^\\//.test(newFileName)) {\n                    var err = new FileError(5);\n                    err.message = 'file name cannot start with /';\n                    return Promise.reject(err);\n                }\n                return _this.resolveDirectoryUrl(path)\n                    .then(function (fse) {\n                    return _this.getFile(fse, fileName, { create: false });\n                })\n                    .then(function (srcfe) {\n                    return _this.resolveDirectoryUrl(newPath).then(function (deste) {\n                        return _this.move(srcfe, deste, newFileName);\n                    });\n                });\n            }\n        })();\n    };\n    File.prototype.copyFile = function (path, fileName, newPath, newFileName) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                newFileName = newFileName || fileName;\n                if (/^\\//.test(newFileName)) {\n                    var err = new FileError(5);\n                    err.message = 'file name cannot start with /';\n                    return Promise.reject(err);\n                }\n                return _this.resolveDirectoryUrl(path)\n                    .then(function (fse) {\n                    return _this.getFile(fse, fileName, { create: false });\n                })\n                    .then(function (srcfe) {\n                    return _this.resolveDirectoryUrl(newPath).then(function (deste) {\n                        return _this.copy(srcfe, deste, newFileName);\n                    });\n                });\n            }\n        })();\n    };\n    /**\n     * @hidden\n     */\n    File.prototype.fillErrorMessage = function (err) {\n        try {\n            err.message = this.cordovaFileError[err.code];\n        }\n        catch (e) { }\n    };\n    File.prototype.resolveLocalFilesystemUrl = function (fileUrl) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                return getPromise(function (resolve, reject) {\n                    try {\n                        window.resolveLocalFileSystemURL(fileUrl, function (entry) {\n                            resolve(entry);\n                        }, function (err) {\n                            _this.fillErrorMessage(err);\n                            reject(err);\n                        });\n                    }\n                    catch (xc) {\n                        _this.fillErrorMessage(xc);\n                        reject(xc);\n                    }\n                });\n            }\n        })();\n    };\n    File.prototype.resolveDirectoryUrl = function (directoryUrl) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                return _this.resolveLocalFilesystemUrl(directoryUrl).then(function (de) {\n                    if (de.isDirectory) {\n                        return de;\n                    }\n                    else {\n                        var err = new FileError(13);\n                        err.message = 'input is not a directory';\n                        return Promise.reject(err);\n                    }\n                });\n            }\n        })();\n    };\n    File.prototype.getDirectory = function (directoryEntry, directoryName, flags) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                return new Promise(function (resolve, reject) {\n                    try {\n                        directoryEntry.getDirectory(directoryName, flags, function (de) {\n                            resolve(de);\n                        }, function (err) {\n                            _this.fillErrorMessage(err);\n                            reject(err);\n                        });\n                    }\n                    catch (xc) {\n                        _this.fillErrorMessage(xc);\n                        reject(xc);\n                    }\n                });\n            }\n        })();\n    };\n    File.prototype.getFile = function (directoryEntry, fileName, flags) {\n        var _this = this;\n        return (function () {\n            if (checkAvailability(_this) === true) {\n                return new Promise(function (resolve, reject) {\n                    try {\n                        directoryEntry.getFile(fileName, flags, resolve, function (err) {\n                            _this.fillErrorMessage(err);\n                            reject(err);\n                        });\n                    }\n                    catch (xc) {\n                        _this.fillErrorMessage(xc);\n                        reject(xc);\n                    }\n                });\n            }\n        })();\n    };\n    File.prototype.readFile = function (path, file, readAs) {\n        var _this = this;\n        if (/^\\//.test(file)) {\n            var err = new FileError(5);\n            err.message = 'file-name cannot start with /';\n            return Promise.reject(err);\n        }\n        return this.resolveDirectoryUrl(path)\n            .then(function (directoryEntry) {\n            return _this.getFile(directoryEntry, file, { create: false });\n        })\n            .then(function (fileEntry) {\n            var reader = new FileReader();\n            return getPromise(function (resolve, reject) {\n                reader.onloadend = function () {\n                    if (reader.result !== undefined || reader.result !== null) {\n                        resolve(reader.result);\n                    }\n                    else if (reader.error !== undefined || reader.error !== null) {\n                        reject(reader.error);\n                    }\n                    else {\n                        reject({ code: null, message: 'READER_ONLOADEND_ERR' });\n                    }\n                };\n                fileEntry.file(function (file) {\n                    reader[\"readAs\" + readAs].call(reader, file);\n                }, function (error) {\n                    reject(error);\n                });\n            });\n        });\n    };\n    /**\n     * @hidden\n     */\n    File.prototype.remove = function (fe) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            fe.remove(function () {\n                resolve({ success: true, fileRemoved: fe });\n            }, function (err) {\n                _this.fillErrorMessage(err);\n                reject(err);\n            });\n        });\n    };\n    /**\n     * @hidden\n     */\n    File.prototype.move = function (srce, destdir, newName) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            srce.moveTo(destdir, newName, function (deste) {\n                resolve(deste);\n            }, function (err) {\n                _this.fillErrorMessage(err);\n                reject(err);\n            });\n        });\n    };\n    /**\n     * @hidden\n     */\n    File.prototype.copy = function (srce, destdir, newName) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            srce.copyTo(destdir, newName, function (deste) {\n                resolve(deste);\n            }, function (err) {\n                _this.fillErrorMessage(err);\n                reject(err);\n            });\n        });\n    };\n    /**\n     * @hidden\n     */\n    File.prototype.readEntries = function (dr) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            dr.readEntries(function (entries) {\n                resolve(entries);\n            }, function (err) {\n                _this.fillErrorMessage(err);\n                reject(err);\n            });\n        });\n    };\n    /**\n     * @hidden\n     */\n    File.prototype.rimraf = function (de) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            de.removeRecursively(function () {\n                resolve({ success: true, fileRemoved: de });\n            }, function (err) {\n                _this.fillErrorMessage(err);\n                reject(err);\n            });\n        });\n    };\n    /**\n     * @hidden\n     */\n    File.prototype.createWriter = function (fe) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            fe.createWriter(function (writer) {\n                resolve(writer);\n            }, function (err) {\n                _this.fillErrorMessage(err);\n                reject(err);\n            });\n        });\n    };\n    /**\n     * @hidden\n     */\n    File.prototype.write = function (writer, gu) {\n        if (gu instanceof Blob) {\n            return this.writeFileInChunks(writer, gu);\n        }\n        return new Promise(function (resolve, reject) {\n            writer.onwriteend = function (evt) {\n                if (writer.error) {\n                    reject(writer.error);\n                }\n                else {\n                    resolve(evt);\n                }\n            };\n            writer.write(gu);\n        });\n    };\n    /**\n     * @hidden\n     */\n    File.prototype.writeFileInChunks = function (writer, file) {\n        var BLOCK_SIZE = 1024 * 1024;\n        var writtenSize = 0;\n        function writeNextChunk() {\n            var size = Math.min(BLOCK_SIZE, file.size - writtenSize);\n            var chunk = file.slice(writtenSize, writtenSize + size);\n            writtenSize += size;\n            writer.write(chunk);\n        }\n        return getPromise(function (resolve, reject) {\n            writer.onerror = reject;\n            writer.onwrite = function () {\n                if (writtenSize < file.size) {\n                    writeNextChunk();\n                }\n                else {\n                    resolve();\n                }\n            };\n            writeNextChunk();\n        });\n    };\n    Object.defineProperty(File.prototype, \"applicationDirectory\", {\n        get: function () { return cordovaPropertyGet(this, \"applicationDirectory\"); },\n        set: function (value) { cordovaPropertySet(this, \"applicationDirectory\", value); },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(File.prototype, \"applicationStorageDirectory\", {\n        get: function () { return cordovaPropertyGet(this, \"applicationStorageDirectory\"); },\n        set: function (value) { cordovaPropertySet(this, \"applicationStorageDirectory\", value); },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(File.prototype, \"dataDirectory\", {\n        get: function () { return cordovaPropertyGet(this, \"dataDirectory\"); },\n        set: function (value) { cordovaPropertySet(this, \"dataDirectory\", value); },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(File.prototype, \"cacheDirectory\", {\n        get: function () { return cordovaPropertyGet(this, \"cacheDirectory\"); },\n        set: function (value) { cordovaPropertySet(this, \"cacheDirectory\", value); },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(File.prototype, \"externalApplicationStorageDirectory\", {\n        get: function () { return cordovaPropertyGet(this, \"externalApplicationStorageDirectory\"); },\n        set: function (value) { cordovaPropertySet(this, \"externalApplicationStorageDirectory\", value); },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(File.prototype, \"externalDataDirectory\", {\n        get: function () { return cordovaPropertyGet(this, \"externalDataDirectory\"); },\n        set: function (value) { cordovaPropertySet(this, \"externalDataDirectory\", value); },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(File.prototype, \"externalCacheDirectory\", {\n        get: function () { return cordovaPropertyGet(this, \"externalCacheDirectory\"); },\n        set: function (value) { cordovaPropertySet(this, \"externalCacheDirectory\", value); },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(File.prototype, \"externalRootDirectory\", {\n        get: function () { return cordovaPropertyGet(this, \"externalRootDirectory\"); },\n        set: function (value) { cordovaPropertySet(this, \"externalRootDirectory\", value); },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(File.prototype, \"tempDirectory\", {\n        get: function () { return cordovaPropertyGet(this, \"tempDirectory\"); },\n        set: function (value) { cordovaPropertySet(this, \"tempDirectory\", value); },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(File.prototype, \"syncedDataDirectory\", {\n        get: function () { return cordovaPropertyGet(this, \"syncedDataDirectory\"); },\n        set: function (value) { cordovaPropertySet(this, \"syncedDataDirectory\", value); },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(File.prototype, \"documentsDirectory\", {\n        get: function () { return cordovaPropertyGet(this, \"documentsDirectory\"); },\n        set: function (value) { cordovaPropertySet(this, \"documentsDirectory\", value); },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(File.prototype, \"sharedDirectory\", {\n        get: function () { return cordovaPropertyGet(this, \"sharedDirectory\"); },\n        set: function (value) { cordovaPropertySet(this, \"sharedDirectory\", value); },\n        enumerable: false,\n        configurable: true\n    });\n    File.pluginName = \"File\";\n    File.plugin = \"cordova-plugin-file\";\n    File.pluginRef = \"cordova.file\";\n    File.repo = \"https://github.com/apache/cordova-plugin-file\";\n    File.platforms = [\"Android\", \"Browser\", \"iOS\", \"macOS\", \"Windows\"];\nFile.ɵfac = /*@__PURE__*/ function () { var ɵFile_BaseFactory; return function File_Factory(t) { return (ɵFile_BaseFactory || (ɵFile_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(File)))(t || File); }; }();\nFile.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: File, factory: function (t) { return File.ɵfac(t); } });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(File, [{\n        type: Injectable\n    }], null, null); })();\n    return File;\n}(IonicNativePlugin));\nexport { File };\n\n","import { __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { IonicNativePlugin, cordova, cordovaPropertyGet, cordovaPropertySet } from '@ionic-native/core';\nimport * as ɵngcc0 from '@angular/core';\nvar HTTP = /** @class */ (function (_super) {\n    __extends(HTTP, _super);\n    function HTTP() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    HTTP.prototype.getBasicAuthHeader = function (username, password) { return cordova(this, \"getBasicAuthHeader\", { \"sync\": true }, arguments); };\n    HTTP.prototype.useBasicAuth = function (username, password) { return cordova(this, \"useBasicAuth\", { \"sync\": true }, arguments); };\n    HTTP.prototype.getHeaders = function (host) { return cordova(this, \"getHeaders\", { \"sync\": true }, arguments); };\n    HTTP.prototype.setHeader = function (host, header, value) { return cordova(this, \"setHeader\", { \"sync\": true }, arguments); };\n    HTTP.prototype.getDataSerializer = function () { return cordova(this, \"getDataSerializer\", { \"sync\": true }, arguments); };\n    HTTP.prototype.setDataSerializer = function (serializer) { return cordova(this, \"setDataSerializer\", { \"sync\": true }, arguments); };\n    HTTP.prototype.setCookie = function (url, cookie) { return cordova(this, \"setCookie\", { \"sync\": true }, arguments); };\n    HTTP.prototype.clearCookies = function () { return cordova(this, \"clearCookies\", { \"sync\": true }, arguments); };\n    HTTP.prototype.removeCookies = function (url, cb) { return cordova(this, \"removeCookies\", { \"sync\": true }, arguments); };\n    HTTP.prototype.getCookieString = function (url) { return cordova(this, \"getCookieString\", { \"sync\": true }, arguments); };\n    HTTP.prototype.getRequestTimeout = function () { return cordova(this, \"getRequestTimeout\", { \"sync\": true }, arguments); };\n    HTTP.prototype.setRequestTimeout = function (timeout) { return cordova(this, \"setRequestTimeout\", { \"sync\": true }, arguments); };\n    HTTP.prototype.getFollowRedirect = function () { return cordova(this, \"getFollowRedirect\", { \"sync\": true }, arguments); };\n    HTTP.prototype.setFollowRedirect = function (follow) { return cordova(this, \"setFollowRedirect\", { \"sync\": true }, arguments); };\n    HTTP.prototype.setServerTrustMode = function (mode) { return cordova(this, \"setServerTrustMode\", {}, arguments); };\n    HTTP.prototype.post = function (url, body, headers) { return cordova(this, \"post\", {}, arguments); };\n    HTTP.prototype.postSync = function (url, body, headers, success, failure) { return cordova(this, \"post\", { \"methodName\": \"post\", \"sync\": true }, arguments); };\n    HTTP.prototype.get = function (url, parameters, headers) { return cordova(this, \"get\", {}, arguments); };\n    HTTP.prototype.getSync = function (url, parameters, headers, success, failure) { return cordova(this, \"get\", { \"methodName\": \"get\", \"sync\": true }, arguments); };\n    HTTP.prototype.put = function (url, body, headers) { return cordova(this, \"put\", {}, arguments); };\n    HTTP.prototype.putSync = function (url, body, headers, success, failure) { return cordova(this, \"put\", { \"methodName\": \"put\", \"sync\": true }, arguments); };\n    HTTP.prototype.patch = function (url, body, headers) { return cordova(this, \"patch\", {}, arguments); };\n    HTTP.prototype.patchSync = function (url, body, headers, success, failure) { return cordova(this, \"patch\", { \"methodName\": \"patch\", \"sync\": true }, arguments); };\n    HTTP.prototype.delete = function (url, parameters, headers) { return cordova(this, \"delete\", {}, arguments); };\n    HTTP.prototype.deleteSync = function (url, parameters, headers, success, failure) { return cordova(this, \"delete\", { \"methodName\": \"delete\", \"sync\": true }, arguments); };\n    HTTP.prototype.head = function (url, parameters, headers) { return cordova(this, \"head\", {}, arguments); };\n    HTTP.prototype.headSync = function (url, parameters, headers, success, failure) { return cordova(this, \"head\", { \"methodName\": \"head\", \"sync\": true }, arguments); };\n    HTTP.prototype.options = function (url, parameters, headers) { return cordova(this, \"options\", {}, arguments); };\n    HTTP.prototype.optionsSync = function (url, parameters, headers, success, failure) { return cordova(this, \"options\", { \"methodName\": \"options\", \"sync\": true }, arguments); };\n    HTTP.prototype.uploadFile = function (url, body, headers, filePath, name) { return cordova(this, \"uploadFile\", {}, arguments); };\n    HTTP.prototype.uploadFileSync = function (url, body, headers, filePath, name, success, failure) { return cordova(this, \"uploadFile\", { \"methodName\": \"uploadFile\", \"sync\": true }, arguments); };\n    HTTP.prototype.downloadFile = function (url, body, headers, filePath) { return cordova(this, \"downloadFile\", {}, arguments); };\n    HTTP.prototype.downloadFileSync = function (url, body, headers, filePath, success, failure) { return cordova(this, \"downloadFile\", { \"methodName\": \"downloadFile\", \"sync\": true }, arguments); };\n    HTTP.prototype.sendRequest = function (url, options) { return cordova(this, \"sendRequest\", {}, arguments); };\n    HTTP.prototype.sendRequestSync = function (url, options, success, failure) { return cordova(this, \"sendRequest\", { \"methodName\": \"sendRequest\", \"sync\": true }, arguments); };\n    HTTP.prototype.abort = function (requestId) { return cordova(this, \"abort\", {}, arguments); };\n    Object.defineProperty(HTTP.prototype, \"ErrorCode\", {\n        get: function () { return cordovaPropertyGet(this, \"ErrorCode\"); },\n        set: function (value) { cordovaPropertySet(this, \"ErrorCode\", value); },\n        enumerable: false,\n        configurable: true\n    });\n    HTTP.pluginName = \"HTTP\";\n    HTTP.plugin = \"cordova-plugin-advanced-http\";\n    HTTP.pluginRef = \"cordova.plugin.http\";\n    HTTP.repo = \"https://github.com/silkimen/cordova-plugin-advanced-http\";\n    HTTP.platforms = [\"Android\", \"iOS\"];\nHTTP.ɵfac = /*@__PURE__*/ function () { var ɵHTTP_BaseFactory; return function HTTP_Factory(t) { return (ɵHTTP_BaseFactory || (ɵHTTP_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(HTTP)))(t || HTTP); }; }();\nHTTP.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: HTTP, factory: function (t) { return HTTP.ɵfac(t); } });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HTTP, [{\n        type: Injectable\n    }], null, null); })();\n    return HTTP;\n}(IonicNativePlugin));\nexport { HTTP };\n\n"],"names":[],"sourceRoot":"webpack:///"}